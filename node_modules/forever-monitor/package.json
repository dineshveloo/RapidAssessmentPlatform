{
  "_args": [
    [
      {
        "raw": "forever-monitor@~1.7.0",
        "scope": null,
        "escapedName": "forever-monitor",
        "name": "forever-monitor",
        "rawSpec": "~1.7.0",
        "spec": ">=1.7.0 <1.8.0",
        "type": "range"
      },
      "/Users/anu/Documents/RapidAssessmentPlatform/node_modules/forever"
    ]
  ],
  "_from": "forever-monitor@~1.7.0",
  "_hasShrinkwrap": false,
  "_id": "forever-monitor@1.7.2",
  "_location": "/forever-monitor",
  "_nodeVersion": "10.3.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/forever-monitor_1.7.2_1578194800227_0.3497445431064077"
  },
  "_npmUser": {
    "name": "indexzero",
    "email": "charlie.robbins@gmail.com"
  },
  "_npmVersion": "6.2.0",
  "_phantomChildren": {
    "i": "0.3.6",
    "mkdirp": "0.5.5",
    "rimraf": "2.7.1"
  },
  "_requested": {
    "raw": "forever-monitor@~1.7.0",
    "scope": null,
    "escapedName": "forever-monitor",
    "name": "forever-monitor",
    "rawSpec": "~1.7.0",
    "spec": ">=1.7.0 <1.8.0",
    "type": "range"
  },
  "_requiredBy": [
    "/forever"
  ],
  "_resolved": "https://registry.npmjs.org/forever-monitor/-/forever-monitor-1.7.2.tgz",
  "_shasum": "ea8aad548eaab4a7e1fd193da80a4d577e4b29ee",
  "_shrinkwrap": null,
  "_spec": "forever-monitor@~1.7.0",
  "_where": "/Users/anu/Documents/RapidAssessmentPlatform/node_modules/forever",
  "author": {
    "name": "Charlie Robbins",
    "email": "charlie.robbins@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/nodejitsu/forever-monitor/issues"
  },
  "contributors": [
    {
      "name": "Charlie Robbins",
      "email": "charlie@nodejitsu.com"
    },
    {
      "name": "Fedor Indutny",
      "email": "fedor.indutny@gmail.com"
    },
    {
      "name": "James Halliday",
      "email": "mail@substack.net"
    },
    {
      "name": "Bradley Meck",
      "email": "bradley@nodejitsu.com"
    },
    {
      "name": "Dominic Tarr",
      "email": "dominic@nodejitsu.com"
    },
    {
      "name": "Maciej MaÅ‚ecki",
      "email": "maciej@nodejitsu.com"
    }
  ],
  "dependencies": {
    "broadway": "~0.3.6",
    "chokidar": "^1.7.0",
    "minimatch": "~3.0.2",
    "ps-tree": "0.0.x",
    "utile": "^0.3.0"
  },
  "description": "Core forever process monitor",
  "devDependencies": {
    "optimist": "~0.6.1",
    "vows": "~0.7.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-TGFkX9Hg1X0A4o0ShOvI7AH+p0Ra2kUfhA4kNL0/DY1lQO7T+DUBbSODFBQrykcrxjyw+D1RiawNOX3X2NFfrw==",
    "shasum": "ea8aad548eaab4a7e1fd193da80a4d577e4b29ee",
    "tarball": "https://registry.npmjs.org/forever-monitor/-/forever-monitor-1.7.2.tgz",
    "fileCount": 48,
    "unpackedSize": 59782,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeEVdwCRA9TVsSAnZWagAAlRAP/04kNOV5ZhsY7gRmfuRm\nin+SL819q/bIy0f1Rgw+2qYNaPSNwAZCsTHL7s80Uas6OIbG6yNVNiISBcYT\nXntvAF2uFefyIJUT+lcGjcSMUr88Xru0y/MksBk+Nz2t6KfsUfoWiM6LhPKV\ndt4I3BIv0oRRlpBY3M5A7Ce+YJPlUFkrSapEbg6KS0xydo5E3sX+IUrRD4+A\nuQlSRcMGyHbB2Oh1O94yEpCbNIjIJdriEJbVwI1+dOhsh5xGlcPzJYExz3R1\nXSr387TNNbymJu9T/d1n/RaacZFrVlJRn03GRVrcreWVyn337/Wa1gL96+W8\nyxbjiIAYGwd/hXkfh6VVt6WvciUNhWDH0Xd8jlLH1SmgSOrCud6pOapDsADK\nvPtL03Cfr+Qc6SnsSPqXDPb8LM58E6+L/7FYDPJcbaW1CBbjePGBB0IkPcgD\nGIsH9I2dKQwLEQ3ZInuFYi1Mk5BF0lOFS9G4iZCZyBmR4vVrmzA2Lmg/+H1h\n9AYu/hrr4Yxq26ieZdbe4bqwmnr/xjRSc1pJzsID2OoJzaxVDCR1HYnk3cpA\nfqvSeh/FrhcvWIJOVlytf7FxUNwKi24zbeL97ClCJJRtuogcF4GQCngYj+ou\n9Fdmk0op0sin8iL2VjoYqdDgo8N5p0cAe+b+fLIspQ9EWPhSKAjkb5v2tcIC\nrtSJ\r\n=zM7S\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 0.8.x"
  },
  "gitHead": "351aaa59366427f255d60b5ab3223fe14c3d9642",
  "homepage": "https://github.com/nodejitsu/forever-monitor#readme",
  "keywords": [
    "fault tolerant",
    "sysadmin",
    "tools"
  ],
  "license": "MIT",
  "main": "./lib/index.js",
  "maintainers": [
    {
      "name": "indexzero",
      "email": "charlie.robbins@gmail.com"
    },
    {
      "name": "jcrugzz",
      "email": "jcrugzz@gmail.com"
    }
  ],
  "name": "forever-monitor",
  "optionalDependencies": {},
  "readme": "# forever-monitor [![Build Status](https://secure.travis-ci.org/foreverjs/forever-monitor.png)](http://travis-ci.org/foreverjs/forever-monitor)\n\nThe core monitoring functionality of forever without the CLI\n\n## Usage\nYou can also use forever from inside your own node.js code.\n\n``` js\n  var forever = require('forever-monitor');\n\n  var child = new (forever.Monitor)('your-filename.js', {\n    max: 3,\n    silent: true,\n    args: []\n  });\n\n  child.on('exit', function () {\n    console.log('your-filename.js has exited after 3 restarts');\n  });\n\n  child.start();\n```\n\n### Spawning a non-node process\nYou can spawn non-node processes too. Either set the `command` key in the\n`options` hash or pass in an `Array` in place of the `file` argument like this:\n\n``` js\n  var forever = require('forever-monitor');\n  var child = forever.start([ 'perl', '-le', 'print \"moo\"' ], {\n    max : 1,\n    silent : true\n  });\n```\n\n### Options available when using Forever in node.js\nThere are several options that you should be aware of when using forever. Most of this configuration is optional.\n\n``` js\n  {\n    //\n    // Basic configuration options\n    //\n    'silent': false,            // Silences the output from stdout and stderr in the parent process\n    'uid': 'your-UID',          // Custom uid for this forever process. (default: autogen)\n    'pidFile': 'path/to/a.pid', // Path to put pid information for the process(es) started\n    'max': 10,                  // Sets the maximum number of times a given script should run\n    'killTree': true,           // Kills the entire child process tree on `exit`\n\n    //\n    // These options control how quickly forever restarts a child process\n    // as well as when to kill a \"spinning\" process\n    //\n    'minUptime': 2000,     // Minimum time a child process has to be up. Forever will 'exit' otherwise.\n    'spinSleepTime': 1000, // Interval between restarts if a child is spinning (i.e. alive < minUptime).\n\n    //\n    // Command to spawn as well as options and other vars\n    // (env, cwd, etc) to pass along\n    //\n    'command': 'perl',         // Binary to run (default: 'node')\n    'args':    ['foo','bar'],  // Additional arguments to pass to the script,\n    'sourceDir': 'script/path',// Directory that the source script is in\n\n    //\n    // Options for restarting on watched files.\n    //\n    'watch': true,               // Value indicating if we should watch files.\n    'watchIgnoreDotFiles': null, // Whether to ignore file starting with a '.'\n    'watchIgnorePatterns': null, // Ignore patterns to use when watching files.\n    'watchDirectory': null,      // Top-level directory to watch from. You can provide multiple watchDirectory options to watch multiple directories (e.g. for cli: forever start -w='app' -w='some_other_directory' app\\index.js)\n\n    //\n    // All or nothing options passed along to `child_process.spawn`.\n    //\n    'spawnWith': {\n      customFds: [-1, -1, -1], // that forever spawns.\n      setsid: false,\n      uid: 0, // Custom UID\n      gid: 0  // Custom GID\n    },\n\n    //\n    // More specific options to pass along to `child_process.spawn` which\n    // will override anything passed to the `spawnWith` option\n    //\n    'env': { 'ADDITIONAL': 'CHILD ENV VARS' },\n    'cwd': '/path/to/child/working/directory',\n\n    //\n    // Log files and associated logging options for this instance\n    //\n    'logFile': 'path/to/file', // Path to log output from forever process (when daemonized)\n    'outFile': 'path/to/file', // Path to log output from child stdout\n    'errFile': 'path/to/file', // Path to log output from child stderr\n\n    //\n    // ### function parseCommand (command, args)\n    // #### @command {String} Command string to parse\n    // #### @args    {Array}  Additional default arguments\n    //\n    // Returns the `command` and the `args` parsed from\n    // any command. Use this to modify the default parsing\n    // done by 'forever-monitor' around spaces.\n    //\n    'parser': function (command, args) {\n      return {\n        command: command,\n        args:    args\n      };\n    }\n  }\n```\n\n### Events available when using an instance of Forever in node.js\nEach forever object is an instance of the node.js core EventEmitter. There are several core events that you can listen for:\n\n* **error**   _[err]:_             Raised when an error occurs\n* **start**   _[process, data]:_   Raised when the target script is first started.\n* **stop**    _[process]:_         Raised when the target script is stopped by the user\n* **restart** _[forever]:_         Raised each time the target script is restarted\n* **exit**    _[forever]:_         Raised when the target script actually exits (permanently).\n* **stdout**  _[data]:_            Raised when data is received from the child process' stdout\n* **stderr**  _[data]:_            Raised when data is received from the child process' stderr\n\n### Typical console output\n\nWhen running the forever CLI tool, it produces debug outputs about which files have changed / how processes exited / etc. To get a similar behaviour with `forever-monitor`, add the following event listeners:\n\n```js\nvar child = new (forever.Monitor)('your-filename.js');\n\nchild.on('watch:restart', function(info) {\n    console.error('Restarting script because ' + info.file + ' changed');\n});\n\nchild.on('restart', function() {\n    console.error('Forever restarting script for ' + child.times + ' time');\n});\n\nchild.on('exit:code', function(code) {\n    console.error('Forever detected script exited with code ' + code);\n});\n```\n\n## Installation\n\n``` bash\n  $ npm install forever-monitor\n```\n\n## Run Tests\n\n``` bash\n  $ npm test\n```\n\n#### License: MIT\n#### Author: [Charlie Robbins](http://github.com/indexzero)\n#### Contributors: [Fedor Indutny](http://github.com/indutny), [James Halliday](http://substack.net/), [Charlie McConnell](http://github.com/avianflu), [Maciej Malecki](http://github.com/mmalecki)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/nodejitsu/forever-monitor.git"
  },
  "scripts": {
    "test": "vows test/**/*-test.js --spec -i",
    "test:ci": "npm run test"
  },
  "version": "1.7.2"
}
