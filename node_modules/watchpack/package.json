{
  "_args": [
    [
      {
        "raw": "watchpack@^1.6.0",
        "scope": null,
        "escapedName": "watchpack",
        "name": "watchpack",
        "rawSpec": "^1.6.0",
        "spec": ">=1.6.0 <2.0.0",
        "type": "range"
      },
      "/Users/anu/Documents/RapidAssessmentPlatform/node_modules/webpack"
    ]
  ],
  "_from": "watchpack@^1.6.0",
  "_hasShrinkwrap": false,
  "_id": "watchpack@1.7.2",
  "_location": "/watchpack",
  "_nodeVersion": "14.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/watchpack_1.7.2_1589640607781_0.28246862884922463"
  },
  "_npmUser": {
    "name": "sokra",
    "email": "tobias.koppers@googlemail.com"
  },
  "_npmVersion": "6.14.4",
  "_phantomChildren": {
    "picomatch": "2.2.2"
  },
  "_requested": {
    "raw": "watchpack@^1.6.0",
    "scope": null,
    "escapedName": "watchpack",
    "name": "watchpack",
    "rawSpec": "^1.6.0",
    "spec": ">=1.6.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/webpack"
  ],
  "_resolved": "https://registry.npmjs.org/watchpack/-/watchpack-1.7.2.tgz",
  "_shasum": "c02e4d4d49913c3e7e122c3325365af9d331e9aa",
  "_shrinkwrap": null,
  "_spec": "watchpack@^1.6.0",
  "_where": "/Users/anu/Documents/RapidAssessmentPlatform/node_modules/webpack",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "bugs": {
    "url": "https://github.com/webpack/watchpack/issues"
  },
  "dependencies": {
    "chokidar": "^3.4.0",
    "graceful-fs": "^4.1.2",
    "neo-async": "^2.5.0",
    "watchpack-chokidar2": "^2.0.0"
  },
  "description": "Wrapper library for directory and file watching.",
  "devDependencies": {
    "codecov.io": "^0.1.6",
    "coveralls": "^3.0.0",
    "eslint": "^4.18.1",
    "istanbul": "^0.4.3",
    "mocha": "^5.0.1",
    "rimraf": "^2.6.2",
    "should": "^8.3.1"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "integrity": "sha512-ymVbbQP40MFTp+cNMvpyBpBtygHnPzPkHqoIwRRj/0B8KhqQwV8LaKjtbaxF2lK4vl8zN9wCxS46IFCU5K4W0g==",
    "shasum": "c02e4d4d49913c3e7e122c3325365af9d331e9aa",
    "tarball": "https://registry.npmjs.org/watchpack/-/watchpack-1.7.2.tgz",
    "fileCount": 9,
    "unpackedSize": 23182,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJev/2gCRA9TVsSAnZWagAA87kP/3anNVdElaD7TjXwJODw\nA/t/WncVPH3FmjpVb5bmqUvObTMnAd//0TJ2tYK0wku7MCkVhuLSN8MPQ2Zy\nW9u5iLwprNoAEsR6jzJ4304LHYdVQxdBb6zbtOi+uhtcdTTRDl//l5PKlJZD\np60X7E+aZH29B+P83LhEQXcCkbnj2kToKY2v7N8IBuoUCchiItcKt9i4i5tG\nMPlIzB0b5MM3Tx6NBvYsUZh/Pm39LM0BkpvW7wuiCBetB3Gde+I+YsliuuuC\nuAsK0ReqmX+Y3JHOooZVBuU0NXsyxoK9qMQij3u/iil2qTHDcQF+OBF9a1UR\nmqLwdc+NiCFXeutfXDJCk7RSk2CgkxoCUKn0N1aiLVawdZaVYBGB8L8DTbFL\nva0aq09/ofSCHGPnkbKwRqEFZ+x7e6JDyhESxBiwOSv6aKbOqOxOCKMvn65F\nLwMDCT/UU7aTdYQXDBkumCtbYAQnlVHDVhVIPwsXbAbFtrwukFgOex1wpUOi\nIoJeHtK6TEg8B7rSM+Q7b6G3OUU1EfsxB0S+ec1ucdHhSwTwB6SZrdP8I6Ui\nvXK+Io9VMV9WIYtIyo4S9b9D11+IHsGLitHybRAgqdSUoaD4pGDjkS+kEOd0\nVv2aOnlIR6xR2GtMTUXbU91Y/smMGlB9YfiDuHr47ZLNIG6ATwgD8IJbQe1S\nnzho\r\n=vnDC\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "lib/",
    "chokidar2"
  ],
  "gitHead": "8d207e733d5d03062fda298ffe49f3e3c3d35594",
  "homepage": "https://github.com/webpack/watchpack",
  "license": "MIT",
  "main": "./lib/watchpack.js",
  "maintainers": [
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    }
  ],
  "name": "watchpack",
  "optionalDependencies": {
    "chokidar": "^3.4.0",
    "watchpack-chokidar2": "^2.0.0"
  },
  "readme": "# watchpack\n\nWrapper library for directory and file watching.\n\n[![Build Status](https://travis-ci.org/webpack/watchpack.svg?branch=master)](https://travis-ci.org/webpack/watchpack) [![Build status](https://ci.appveyor.com/api/projects/status/e5u2qvmugtv0r647/branch/master?svg=true)](https://ci.appveyor.com/project/sokra/watchpack/branch/master) [![Test coverage][coveralls-image]][coveralls-url]\n\n## Concept\n\nwatchpack high level API doesn't map directly to watchers. Instead a three level architecture ensures that for each directory only a single watcher exists.\n\n* The high level API requests `DirectoryWatchers` from a `WatcherManager`, which ensures that only a single `DirectoryWatcher` per directory is created.\n* A user-faced `Watcher` can be obtained from a `DirectoryWatcher` and provides a filtered view on the `DirectoryWatcher`.\n* Reference-counting is used on the `DirectoryWatcher` and `Watcher` to decide when to close them.\n* The real watchers (currently chokidar) are created by the `DirectoryWatcher`.\n* Files are never watched directly. This should keep the watcher count low.\n* Watching can be started in the past. This way watching can start after file reading.\n* Symlinks are not followed, instead the symlink is watched.\n\n## API\n\n``` javascript\nvar Watchpack = require(\"watchpack\");\n\nvar wp = new Watchpack({\n\t// options:\n\taggregateTimeout: 1000\n\t// fire \"aggregated\" event when after a change for 1000ms no additional change occurred\n\t// aggregated defaults to undefined, which doesn't fire an \"aggregated\" event\n\n\tpoll: true\n\t// poll: true - use polling with the default interval\n\t// poll: 10000 - use polling with an interval of 10s\n\t// poll defaults to undefined, which prefer native watching methods\n\t// Note: enable polling when watching on a network path\n\n\tignored: /node_modules/,\n\t// anymatch-compatible definition of files/paths to be ignored\n\t// see https://github.com/paulmillr/chokidar#path-filtering\n});\n\n// Watchpack.prototype.watch(string[] files, string[] directories, [number startTime])\nwp.watch(listOfFiles, listOfDirectories, Date.now() - 10000);\n// starts watching these files and directories\n// calling this again will override the files and directories\n\nwp.on(\"change\", function(filePath, mtime) {\n\t// filePath: the changed file\n\t// mtime: last modified time for the changed file\n});\n\nwp.on(\"aggregated\", function(changes) {\n\t// changes: an array of all changed files\n});\n\n// Watchpack.prototype.pause()\nwp.pause();\n// stops emitting events, but keeps watchers open\n// next \"watch\" call can reuse the watchers\n\n// Watchpack.prototype.close()\nwp.close();\n// stops emitting events and closes all watchers\n\n// Watchpack.prototype.getTimes()\nvar fileTimes = wp.getTimes();\n// returns an object with all know change times for files\n// this include timestamps from files not directly watched\n// key: absolute path, value: timestamp as number\n```\n\n[coveralls-url]: https://coveralls.io/r/webpack/watchpack/\n[coveralls-image]: https://img.shields.io/coveralls/webpack/watchpack.svg\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack/watchpack.git"
  },
  "scripts": {
    "cover": "istanbul cover node_modules/mocha/bin/_mocha",
    "lint": "eslint lib",
    "precover": "npm run lint",
    "pretest": "npm run lint",
    "test": "mocha",
    "travis": "npm run cover -- --report lcovonly"
  },
  "version": "1.7.2"
}
