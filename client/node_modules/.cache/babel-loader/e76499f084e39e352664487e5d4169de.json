{"ast":null,"code":"require('dotenv').config();\n\nconst express = require(\"express\");\n\nconst mongoose = require(\"mongoose\");\n\nconst bodyParser = require(\"body-parser\");\n\nconst passport = require(\"passport\");\n\nconst cors = require('cors');\n\nconst users = require(\"./routes/api/users\");\n\nconst _require = require('./config/info'),\n      PORT = _require.PORT,\n      CLIENT_ORIGIN = _require.CLIENT_ORIGIN;\n\nconst app = express();\napp.use(cors({\n  origin: CLIENT_ORIGIN\n})); // Bodyparser middleware\n\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(bodyParser.json()); // DB Config\n\nconst db = require(\"./config/keys\").mongoURI; // Connect to MongoDB\n\n\nmongoose.connect(db, {\n  useNewUrlParser: true\n}, () => {\n  app.listen(PORT, () => console.log('conneted'));\n}).then(() => console.log(\"MongoDB successfully connected\")).catch(err => console.log(err)); // Passport middleware\n\napp.use(passport.initialize()); // Passport config\n\nrequire(\"./config/passport\")(passport); // Routes\n\n\napp.use(\"/api/users\", users);\napp.get('/wake-up', (req, res) => res.json('wakeup'));\napp.use('*', (req, res) => {\n  res.status(404).json({\n    msg: 'Not Found'\n  });\n});\nconst port = process.env.PORT || 5000;\napp.listen(port, () => console.log(\"Server up and running on port \".concat(port, \" !\")));","map":{"version":3,"sources":["/Users/anu/Documents/RapidAssessmentPlatform/server.js"],"names":["require","config","express","mongoose","bodyParser","passport","cors","users","PORT","CLIENT_ORIGIN","app","use","origin","urlencoded","extended","json","db","mongoURI","connect","useNewUrlParser","listen","console","log","then","catch","err","initialize","get","req","res","status","msg","port","process","env"],"mappings":"AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMI,UAAU,GAAGJ,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAMK,QAAQ,GAAGL,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMM,IAAI,GAAGN,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMO,KAAK,GAAGP,OAAO,CAAC,oBAAD,CAArB;;iBACgCA,OAAO,CAAC,eAAD,C;MAA/BQ,I,YAAAA,I;MAAMC,a,YAAAA,a;;AAEd,MAAMC,GAAG,GAAGR,OAAO,EAAnB;AAEAQ,GAAG,CAACC,GAAJ,CAAQL,IAAI,CAAC;AACXM,EAAAA,MAAM,EAAEH;AADG,CAAD,CAAZ,E,CAIA;;AACAC,GAAG,CAACC,GAAJ,CACEP,UAAU,CAACS,UAAX,CAAsB;AACpBC,EAAAA,QAAQ,EAAE;AADU,CAAtB,CADF;AAKAJ,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACW,IAAX,EAAR,E,CAEA;;AACA,MAAMC,EAAE,GAAGhB,OAAO,CAAC,eAAD,CAAP,CAAyBiB,QAApC,C,CAEA;;;AACAd,QAAQ,CACLe,OADH,CAEIF,EAFJ,EAGI;AAAEG,EAAAA,eAAe,EAAE;AAAnB,CAHJ,EAG8B,MAAI;AAC5BT,EAAAA,GAAG,CAACU,MAAJ,CAAWZ,IAAX,EAAiB,MAAMa,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAvB;AACD,CALL,EAOGC,IAPH,CAOQ,MAAMF,OAAO,CAACC,GAAR,CAAY,gCAAZ,CAPd,EAQGE,KARH,CAQSC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CARhB,E,CAUA;;AACAf,GAAG,CAACC,GAAJ,CAAQN,QAAQ,CAACqB,UAAT,EAAR,E,CAEA;;AACA1B,OAAO,CAAC,mBAAD,CAAP,CAA6BK,QAA7B,E,CAEA;;;AACAK,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsBJ,KAAtB;AAEAG,GAAG,CAACiB,GAAJ,CAAQ,UAAR,EAAoB,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACd,IAAJ,CAAS,QAAT,CAAlC;AAEAL,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,CAACiB,GAAD,EAAMC,GAAN,KAAc;AACzBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBf,IAAhB,CAAqB;AAAEgB,IAAAA,GAAG,EAAE;AAAP,GAArB;AACD,CAFD;AAIA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAY1B,IAAZ,IAAoB,IAAjC;AAEAE,GAAG,CAACU,MAAJ,CAAWY,IAAX,EAAiB,MAAMX,OAAO,CAACC,GAAR,yCAA6CU,IAA7C,QAAvB","sourcesContent":["require('dotenv').config()\nconst express = require(\"express\");\nconst mongoose = require(\"mongoose\");\nconst bodyParser = require(\"body-parser\");\nconst passport = require(\"passport\");\nconst cors = require('cors');\nconst users = require(\"./routes/api/users\");\nconst { PORT, CLIENT_ORIGIN } = require('./config/info')\n\nconst app = express();\n\napp.use(cors({\n  origin: CLIENT_ORIGIN\n}))\n\n// Bodyparser middleware\napp.use(\n  bodyParser.urlencoded({\n    extended: false\n  })\n);\napp.use(bodyParser.json());\n\n// DB Config\nconst db = require(\"./config/keys\").mongoURI;\n\n// Connect to MongoDB\nmongoose\n  .connect(\n    db,\n    { useNewUrlParser: true },()=>{\n      app.listen(PORT, () => console.log('conneted'))\n    }\n  )\n  .then(() => console.log(\"MongoDB successfully connected\"))\n  .catch(err => console.log(err));\n\n// Passport middleware\napp.use(passport.initialize());\n\n// Passport config\nrequire(\"./config/passport\")(passport);\n\n// Routes\napp.use(\"/api/users\", users);\n\napp.get('/wake-up', (req, res) => res.json('wakeup'))\n\napp.use('*', (req, res) => {\n  res.status(404).json({ msg: 'Not Found' })\n})\n\nconst port = process.env.PORT || 5000;\n\napp.listen(port, () => console.log(`Server up and running on port ${port} !`));\n\n"]},"metadata":{},"sourceType":"script"}