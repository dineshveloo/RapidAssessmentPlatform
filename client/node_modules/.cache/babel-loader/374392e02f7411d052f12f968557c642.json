{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GARIGIPATHI\\\\Documents\\\\RapidAssessmentPlatform\\\\client\\\\src\\\\pages\\\\EmailConfirmPage.jsx\";\nimport React, { Component } from 'react';\nimport { MDBEdgeHeader, MDBContainer, MDBRow, MDBCol, MDBJumbotron, MDBIcon, MDBInput, MDBBtn, MDBAnimation } from 'mdbreact';\nimport { API_URL } from '../config';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass EmailConfirmPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      company: '',\n      msg: '',\n      nameError: '',\n      emailError: '',\n      companyError: '',\n      status: 0\n    };\n\n    this.validate = () => {\n      //debugger;\n      let nameError = \"\",\n          emailError = \"\",\n          companyError = \"\";\n\n      if (!this.state.name) {\n        nameError = 'name cannot be empty';\n      }\n\n      if (!this.state.email.includes('@') || !this.state.email.includes('.')) {\n        emailError = 'please enter a valid email address';\n      }\n\n      if (!this.state.company) {\n        companyError = 'company cannot be empty';\n      }\n\n      if (nameError || emailError || companyError) {\n        this.setState({\n          nameError,\n          emailError,\n          companyError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.onSubmit = event => {\n      // this.form.reset();\n      event.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        fetch(\"\".concat(API_URL, \"/api/users/confirm\"), {\n          method: 'post',\n          headers: {\n            accept: 'application/json',\n            'content-type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: event.target.email.value,\n            name: event.target.name.value,\n            company: event.target.company.value\n          })\n        }).then(res => res.json()).then(data => {\n          if (data.status === 1) {\n            this.setState({\n              msg: data.msg\n            });\n            this.setState({\n              status: data.status\n            }); //console.log(data)\n\n            toast(data.msg);\n          } else if (data.status === 0) {\n            toast(data.msg);\n          } else if (data.status === -1) {\n            toast(data.msg);\n          } else if (data.status === 2) {\n            toast(data.msg);\n            this.props.history.push(\"/register\");\n          }\n        }).catch(err => console.log(err));\n      }\n    };\n\n    this.changeHandler = event => {\n      switch (event.target.id) {\n        case 'name':\n          this.setState({\n            nameError: ''\n          });\n          break;\n\n        case 'email':\n          this.setState({\n            emailError: ''\n          });\n          break;\n\n        case 'company':\n          this.setState({\n            companyError: ''\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          nameError = _this$state.nameError,\n          emailError = _this$state.emailError,\n          companyError = _this$state.companyError;\n    let isEnabledCheck = emailError || companyError || nameError;\n    let isEnabled = false;\n\n    if (isEnabledCheck.length > 0) {\n      isEnabled = true;\n    } else {\n      isEnabled = false;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MDBEdgeHeader, {\n      color: \"indigo darken-3\",\n      className: \"sectionPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(MDBAnimation, {\n      type: \"zoomIn\",\n      duration: \"500ms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MDBContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MDBCol, {\n      md: \"8\",\n      className: \"mt-3 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MDBJumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"edit\",\n      className: \"indigo-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 41\n      }\n    }), \"Request access to Rapid Assesment Platform\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"emailForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grey-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      name: \"text\",\n      id: \"name\",\n      label: \"Your name\",\n      icon: \"user\",\n      group: true,\n      type: \"text\",\n      success: \"right\",\n      value: this.state.name,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 13,\n        paddingLeft: 42,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 45\n      }\n    }, this.state.nameError)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grey-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      name: \"email\",\n      id: \"email\",\n      label: \"Your email\",\n      icon: \"envelope\",\n      group: true,\n      type: \"email\",\n      success: \"right\",\n      value: this.state.email,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 13,\n        paddingLeft: 42,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 45\n      }\n    }, this.state.emailError)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grey-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      name: \"text\",\n      id: \"company\",\n      label: \"Your company name\",\n      icon: \"pencil-alt\",\n      group: true,\n      type: \"text\",\n      success: \"right\",\n      value: this.state.company,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 13,\n        paddingLeft: 42,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 45\n      }\n    }, this.state.companyError)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(MDBBtn, {\n      outline: true,\n      color: \"info\",\n      type: \"submit\",\n      disabled: isEnabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 45\n      }\n    }, \"Send\", /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"paper-plane\",\n      className: \"ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 53\n      }\n    }))))))))));\n  }\n\n}\n\nexport default EmailConfirmPage;","map":{"version":3,"sources":["C:/Users/GARIGIPATHI/Documents/RapidAssessmentPlatform/client/src/pages/EmailConfirmPage.jsx"],"names":["React","Component","MDBEdgeHeader","MDBContainer","MDBRow","MDBCol","MDBJumbotron","MDBIcon","MDBInput","MDBBtn","MDBAnimation","API_URL","toast","EmailConfirmPage","state","name","email","company","msg","nameError","emailError","companyError","status","validate","includes","setState","onSubmit","event","preventDefault","isValid","fetch","method","headers","accept","body","JSON","stringify","target","value","then","res","json","data","props","history","push","catch","err","console","log","changeHandler","id","render","isEnabledCheck","isEnabled","length","fontSize","paddingLeft","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    MDBEdgeHeader,\r\n    MDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBJumbotron,\r\n    MDBIcon,\r\n    MDBInput,\r\n    MDBBtn,\r\n    MDBAnimation\r\n} from 'mdbreact';\r\nimport { API_URL } from '../config';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nclass EmailConfirmPage extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        company: '',\r\n        msg: '',\r\n        nameError: '',\r\n        emailError: '',\r\n        companyError: '',\r\n        status: 0\r\n    }\r\n\r\n    validate = () => {\r\n        //debugger;\r\n        let nameError = \"\", emailError = \"\", companyError = \"\"\r\n        if (!this.state.name) {\r\n            nameError = 'name cannot be empty';\r\n        }\r\n\r\n        if (!this.state.email.includes('@') || !this.state.email.includes('.')) {\r\n            emailError = 'please enter a valid email address';\r\n        }\r\n        if (!this.state.company) {\r\n            companyError = 'company cannot be empty';\r\n        }\r\n\r\n        if (nameError || emailError || companyError) {\r\n            this.setState({ nameError, emailError, companyError });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    onSubmit = event => {\r\n        // this.form.reset();\r\n        event.preventDefault()\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            fetch(`${API_URL}/api/users/confirm`, {\r\n                method: 'post',\r\n                headers: {\r\n                    accept: 'application/json',\r\n                    'content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify(\r\n                    {\r\n                        email: event.target.email.value,\r\n                        name: event.target.name.value,\r\n                        company: event.target.company.value\r\n                    })\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    if (data.status === 1) {\r\n                        this.setState({ msg: data.msg })\r\n                        this.setState({ status: data.status })\r\n                        //console.log(data)\r\n                        toast(data.msg);\r\n\r\n                    } else if (data.status === 0) {\r\n                        toast(data.msg);\r\n                    } \r\n                    else if(data.status === -1){\r\n                        toast(data.msg);\r\n                    }\r\n                    else if (data.status === 2) {\r\n                        toast(data.msg);\r\n                        this.props.history.push(\"/register\");\r\n                    } \r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n\r\n    }\r\n\r\n    changeHandler = event => {\r\n        switch (event.target.id) {\r\n            case 'name': this.setState({ nameError: '' });\r\n                break;\r\n            case 'email': this.setState({ emailError: '' });\r\n                break;\r\n            case 'company': this.setState({ companyError: '' });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({ [event.target.id]: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { nameError, emailError, companyError } = this.state;\r\n        let isEnabledCheck = emailError || companyError || nameError;\r\n        let isEnabled= false;\r\n        if (isEnabledCheck.length > 0) {\r\n            isEnabled = true;\r\n        }else{\r\n            isEnabled = false;\r\n        }\r\n        return (\r\n            <>\r\n                <MDBEdgeHeader color='indigo darken-3' className='sectionPage' />\r\n                <MDBAnimation type='zoomIn' duration='500ms'>\r\n                    <MDBContainer>\r\n                        <MDBRow>\r\n                            <MDBCol md='8' className='mt-3 mx-auto'>\r\n                                <MDBJumbotron>\r\n                                    <h1 className='text-center'>\r\n                                        <MDBIcon icon='edit' className='indigo-text mr-2' />\r\n                                        Request access to Rapid Assesment Platform\r\n                                    </h1>\r\n                                    <form onSubmit={this.onSubmit} className=\"emailForm\" >\r\n                                        <div className='grey-text'>\r\n                                            <MDBInput\r\n                                                name='text'\r\n                                                id=\"name\"\r\n                                                label='Your name'\r\n                                                icon='user'\r\n                                                group\r\n                                                type='text'\r\n                                                success='right'\r\n                                                value={this.state.name}\r\n                                                onChange={this.changeHandler}\r\n                                            />\r\n                                            <div style={{ fontSize: 13, paddingLeft: 42, color: \"red\" }}>{this.state.nameError}</div>\r\n                                        </div>\r\n\r\n                                        <div className='grey-text'>\r\n                                            <MDBInput\r\n                                                name='email'\r\n                                                id=\"email\"\r\n                                                label='Your email'\r\n                                                icon='envelope'\r\n                                                group\r\n                                                type='email'\r\n                                                success='right'\r\n                                                value={this.state.email}\r\n                                                onChange={this.changeHandler}\r\n                                            />\r\n                                            <div style={{ fontSize: 13, paddingLeft: 42, color: \"red\" }}>{this.state.emailError}</div>\r\n                                        </div>\r\n\r\n                                        <div className='grey-text'>\r\n                                            <MDBInput\r\n                                                name='text'\r\n                                                id=\"company\"\r\n                                                label='Your company name'\r\n                                                icon='pencil-alt'\r\n                                                group\r\n                                                type='text'\r\n                                                success='right'\r\n                                                value={this.state.company}\r\n                                                onChange={this.changeHandler}\r\n                                            />\r\n                                            <div style={{ fontSize: 13, paddingLeft: 42, color: \"red\" }}>{this.state.companyError}</div>\r\n                                        </div>\r\n                                        <div className='text-center'>\r\n                                            <MDBBtn outline color='info' type='submit' disabled={isEnabled}>\r\n                                                Send<MDBIcon icon='paper-plane' className='ml-1' />\r\n                                               \r\n                                            </MDBBtn>\r\n                                        </div>\r\n                                    </form>\r\n                                </MDBJumbotron>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBContainer>\r\n                </MDBAnimation>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EmailConfirmPage;\r\n"]},"metadata":{},"sourceType":"module"}