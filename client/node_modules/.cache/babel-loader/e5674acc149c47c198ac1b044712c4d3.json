{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GARIGIPATHI\\\\Documents\\\\RapidAssessmentPlatform\\\\client\\\\src\\\\pages\\\\ResetPasswordPage.jsx\";\nimport React, { Component } from 'react';\nimport { MDBEdgeHeader, MDBContainer, MDBRow, MDBCol, MDBJumbotron, MDBIcon, MDBAnimation, MDBInput, MDBBtn } from 'mdbreact';\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { RegisterUser } from '../actions/authActions'; //import classnames from \"classnames\";\n\nconst initialState = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  password2: \"\",\n  nameError: \"\",\n  emailError: \"\",\n  passwordError: \"\",\n  password2Error: \"\"\n};\n\nclass ResetPasswordPage extends Component {\n  constructor() {\n    super();\n\n    this.validate = () => {\n      //debugger;\n      let nameError = \"\",\n          emailError = \"\",\n          passwordError = \"\",\n          password2Error = \"\";\n\n      if (!this.state.name) {\n        nameError = 'name cannot be blank';\n      }\n\n      if (!this.state.email.includes('@') || !this.state.email.includes('.')) {\n        emailError = 'please enter a valid email address';\n      }\n\n      if (this.state.password.length < 6 || this.state.password === this.state.name || this.state.password === this.state.email) {\n        passwordError = 'password must aleast 6 character';\n      } else if (this.state.password2 !== this.state.password) {\n        password2Error = 'Passwords must match';\n      }\n\n      if (emailError || nameError || passwordError || password2Error) {\n        this.setState({\n          emailError,\n          nameError,\n          passwordError,\n          password2Error\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.onChange = e => {\n      //alert(e.target.id);\n      switch (e.target.id) {\n        case 'name':\n          this.setState({\n            nameError: ''\n          });\n          break;\n\n        case 'email':\n          this.setState({\n            emailError: ''\n          });\n          break;\n\n        case 'password':\n          this.setState({\n            passwordError: ''\n          });\n          break;\n\n        case 'password2':\n          this.setState({\n            password2Error: ''\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        const newUser = {\n          name: this.state.name,\n          email: this.state.email,\n          password: this.state.password,\n          password2: this.state.password2\n        };\n        this.props.RegisterUser(newUser, this.props.history); //reset form\n\n        this.setState({\n          initialState\n        });\n      }\n    };\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/register\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          emailError = _this$state.emailError,\n          passwordError = _this$state.passwordError;\n    let isEnabledCheck = emailError || passwordError;\n    let isEnabled = false;\n\n    if (isEnabledCheck.length > 0) {\n      isEnabled = true;\n    } else {\n      isEnabled = false;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MDBEdgeHeader, {\n      color: \"indigo darken-3\",\n      className: \"sectionPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(MDBAnimation, {\n      type: \"zoomIn\",\n      duration: \"500ms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MDBContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MDBCol, {\n      md: \"8\",\n      className: \"mt-3 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MDBJumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"edit\",\n      className: \"indigo-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 41\n      }\n    }), \"Reset\"), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grey-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      onChange: this.onChange,\n      value: this.state.name,\n      id: \"name\",\n      type: \"text\",\n      label: \"Your name\",\n      icon: \"user\",\n      group: true,\n      validate: true,\n      success: \"right\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 13,\n        paddingLeft: 42,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 45\n      }\n    }, this.state.nameError), /*#__PURE__*/React.createElement(MDBInput, {\n      onChange: this.onChange,\n      value: this.state.email,\n      id: \"email\",\n      type: \"email\",\n      label: \"Your email\",\n      icon: \"envelope\",\n      group: true,\n      validate: true,\n      success: \"right\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 13,\n        paddingLeft: 42,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 45\n      }\n    }, this.state.emailError), /*#__PURE__*/React.createElement(MDBInput, {\n      onChange: this.onChange,\n      value: this.state.password,\n      id: \"password\",\n      type: \"password\",\n      label: \"Your password\",\n      icon: \"lock\",\n      group: true,\n      validate: true,\n      success: \"right\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 13,\n        paddingLeft: 42,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 45\n      }\n    }, this.state.passwordError), /*#__PURE__*/React.createElement(MDBInput, {\n      onChange: this.onChange,\n      value: this.state.password2,\n      id: \"password2\",\n      type: \"password\",\n      label: \"Confirm your password\",\n      icon: \"exclamation-triangle\",\n      group: true,\n      validate: true,\n      success: \"right\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 13,\n        paddingLeft: 42,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 45\n      }\n    }, this.state.password2Error)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(MDBBtn, {\n      color: \"primary\",\n      type: \"submit\",\n      disabled: isEnabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 45\n      }\n    }, \"Submit\")))))))));\n  }\n\n}\n\nResetPasswordPage.propTypes = {\n  RegisterUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  RegisterUser\n})(withRouter(ResetPasswordPage));","map":{"version":3,"sources":["C:/Users/GARIGIPATHI/Documents/RapidAssessmentPlatform/client/src/pages/ResetPasswordPage.jsx"],"names":["React","Component","MDBEdgeHeader","MDBContainer","MDBRow","MDBCol","MDBJumbotron","MDBIcon","MDBAnimation","MDBInput","MDBBtn","withRouter","PropTypes","connect","RegisterUser","initialState","name","email","password","password2","nameError","emailError","passwordError","password2Error","ResetPasswordPage","constructor","validate","state","includes","length","setState","onChange","e","target","id","value","onSubmit","preventDefault","isValid","newUser","props","history","componentDidMount","auth","isAuthenticated","push","componentWillReceiveProps","nextProps","errors","render","isEnabledCheck","isEnabled","fontSize","paddingLeft","color","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,aADJ,EAEIC,YAFJ,EAGIC,MAHJ,EAIIC,MAJJ,EAKIC,YALJ,EAMIC,OANJ,EAOIC,YAPJ,EAQIC,QARJ,EASIC,MATJ,QAUO,UAVP;AAWA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,wBAA7B,C,CACA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,QAAQ,EAAE,EAHO;AAIjBC,EAAAA,SAAS,EAAE,EAJM;AAKjBC,EAAAA,SAAS,EAAE,EALM;AAMjBC,EAAAA,UAAU,EAAE,EANK;AAOjBC,EAAAA,aAAa,EAAE,EAPE;AAQjBC,EAAAA,cAAc,EAAE;AARC,CAArB;;AAWA,MAAMC,iBAAN,SAAgCvB,SAAhC,CAA0C;AACtCwB,EAAAA,WAAW,GAAG;AACV;;AADU,SAmBdC,QAnBc,GAmBH,MAAM;AACb;AACA,UAAIN,SAAS,GAAG,EAAhB;AAAA,UAAoBC,UAAU,GAAG,EAAjC;AAAA,UAAqCC,aAAa,GAAG,EAArD;AAAA,UAAyDC,cAAc,GAAG,EAA1E;;AACA,UAAI,CAAC,KAAKI,KAAL,CAAWX,IAAhB,EAAsB;AAClBI,QAAAA,SAAS,GAAG,sBAAZ;AACH;;AACD,UAAI,CAAC,KAAKO,KAAL,CAAWV,KAAX,CAAiBW,QAAjB,CAA0B,GAA1B,CAAD,IAAmC,CAAC,KAAKD,KAAL,CAAWV,KAAX,CAAiBW,QAAjB,CAA0B,GAA1B,CAAxC,EAAwE;AACpEP,QAAAA,UAAU,GAAG,oCAAb;AACH;;AACD,UAAI,KAAKM,KAAL,CAAWT,QAAX,CAAoBW,MAApB,GAA6B,CAA7B,IAAkC,KAAKF,KAAL,CAAWT,QAAX,KAAwB,KAAKS,KAAL,CAAWX,IAArE,IAA6E,KAAKW,KAAL,CAAWT,QAAX,KAAwB,KAAKS,KAAL,CAAWV,KAApH,EAA2H;AACvHK,QAAAA,aAAa,GAAG,kCAAhB;AACH,OAFD,MAGK,IAAI,KAAKK,KAAL,CAAWR,SAAX,KAAyB,KAAKQ,KAAL,CAAWT,QAAxC,EAAkD;AACnDK,QAAAA,cAAc,GAAG,sBAAjB;AACH;;AAGD,UAAIF,UAAU,IAAID,SAAd,IAA2BE,aAA3B,IAA4CC,cAAhD,EAAgE;AAC5D,aAAKO,QAAL,CAAc;AAAET,UAAAA,UAAF;AAAcD,UAAAA,SAAd;AAAyBE,UAAAA,aAAzB;AAAwCC,UAAAA;AAAxC,SAAd;AACA,eAAO,KAAP;AACH;;AACD,aAAO,IAAP;AACH,KAzCa;;AAAA,SA2CdQ,QA3Cc,GA2CHC,CAAC,IAAI;AAEZ;AACA,cAAQA,CAAC,CAACC,MAAF,CAASC,EAAjB;AACI,aAAK,MAAL;AAAa,eAAKJ,QAAL,CAAc;AAAEV,YAAAA,SAAS,EAAE;AAAb,WAAd;AACT;;AACJ,aAAK,OAAL;AAAc,eAAKU,QAAL,CAAc;AAAET,YAAAA,UAAU,EAAE;AAAd,WAAd;AACV;;AACJ,aAAK,UAAL;AAAiB,eAAKS,QAAL,CAAc;AAAER,YAAAA,aAAa,EAAE;AAAjB,WAAd;AACb;;AACJ,aAAK,WAAL;AAAkB,eAAKQ,QAAL,CAAc;AAAEP,YAAAA,cAAc,EAAE;AAAlB,WAAd;AACd;;AACJ;AACI;AAVR;;AAYA,WAAKO,QAAL,CAAc;AAAE,SAACE,CAAC,CAACC,MAAF,CAASC,EAAV,GAAeF,CAAC,CAACC,MAAF,CAASE;AAA1B,OAAd;AACH,KA3Da;;AAAA,SA6DdC,QA7Dc,GA6DHJ,CAAC,IAAI;AACZA,MAAAA,CAAC,CAACK,cAAF;AACA,YAAMC,OAAO,GAAG,KAAKZ,QAAL,EAAhB;;AACA,UAAIY,OAAJ,EAAa;AACT,cAAMC,OAAO,GAAG;AACZvB,UAAAA,IAAI,EAAE,KAAKW,KAAL,CAAWX,IADL;AAEZC,UAAAA,KAAK,EAAE,KAAKU,KAAL,CAAWV,KAFN;AAGZC,UAAAA,QAAQ,EAAE,KAAKS,KAAL,CAAWT,QAHT;AAIZC,UAAAA,SAAS,EAAE,KAAKQ,KAAL,CAAWR;AAJV,SAAhB;AAMA,aAAKqB,KAAL,CAAW1B,YAAX,CAAwByB,OAAxB,EAAiC,KAAKC,KAAL,CAAWC,OAA5C,EAPS,CAQT;;AACA,aAAKX,QAAL,CAAc;AAAEf,UAAAA;AAAF,SAAd;AACH;AACJ,KA3Ea;;AAEV,SAAKY,KAAL,GAAaZ,YAAb;AACH;;AAED2B,EAAAA,iBAAiB,GAAG;AAChB;AACA,QAAI,KAAKF,KAAL,CAAWG,IAAX,CAAgBC,eAApB,EAAqC;AACjC,WAAKJ,KAAL,CAAWC,OAAX,CAAmBI,IAAnB,CAAwB,WAAxB;AACH;AACJ;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,QAAIA,SAAS,CAACC,MAAd,EAAsB;AAClB,WAAKlB,QAAL,CAAc;AACVkB,QAAAA,MAAM,EAAED,SAAS,CAACC;AADR,OAAd;AAGH;AACJ;;AA0DDC,EAAAA,MAAM,GAAG;AAAA,wBACiC,KAAKtB,KADtC;AAAA,UACGN,UADH,eACGA,UADH;AAAA,UACeC,aADf,eACeA,aADf;AAEL,QAAI4B,cAAc,GAAG7B,UAAU,IAAIC,aAAnC;AACA,QAAI6B,SAAS,GAAE,KAAf;;AACA,QAAID,cAAc,CAACrB,MAAf,GAAwB,CAA5B,EAA+B;AAC3BsB,MAAAA,SAAS,GAAG,IAAZ;AACH,KAFD,MAEK;AACDA,MAAAA,SAAS,GAAG,KAAZ;AACH;;AACD,wBACI,uDACI,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAC,iBAArB;AAAuC,MAAA,SAAS,EAAC,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,QAAQ,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAe,MAAA,SAAS,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,MAAd;AAAqB,MAAA,SAAS,EAAC,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,UADJ,eAKI;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,QAAQ,EAAE,KAAKf,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,QAAQ,EAAE,KAAKL,QADnB;AAEI,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWX,IAFtB;AAGI,MAAA,EAAE,EAAC,MAHP;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,KAAK,EAAC,WALV;AAMI,MAAA,IAAI,EAAC,MANT;AAOI,MAAA,KAAK,MAPT;AAQI,MAAA,QAAQ,MARZ;AASI,MAAA,OAAO,EAAC,OATZ;AAUI,MAAA,QAAQ,MAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAcI;AAAK,MAAA,KAAK,EAAE;AAAEoC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,WAAW,EAAE,EAA7B;AAAiCC,QAAAA,KAAK,EAAE;AAAxC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8D,KAAK3B,KAAL,CAAWP,SAAzE,CAdJ,eAeI,oBAAC,QAAD;AACI,MAAA,QAAQ,EAAE,KAAKW,QADnB;AAEI,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWV,KAFtB;AAGI,MAAA,EAAE,EAAC,OAHP;AAII,MAAA,IAAI,EAAC,OAJT;AAKI,MAAA,KAAK,EAAC,YALV;AAMI,MAAA,IAAI,EAAC,UANT;AAOI,MAAA,KAAK,MAPT;AAQI,MAAA,QAAQ,MARZ;AASI,MAAA,OAAO,EAAC,OATZ;AAUI,MAAA,QAAQ,MAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,eA2BI;AAAK,MAAA,KAAK,EAAE;AAAEmC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,WAAW,EAAE,EAA7B;AAAiCC,QAAAA,KAAK,EAAE;AAAxC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8D,KAAK3B,KAAL,CAAWN,UAAzE,CA3BJ,eA4BI,oBAAC,QAAD;AACI,MAAA,QAAQ,EAAE,KAAKU,QADnB;AAEI,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWT,QAFtB;AAGI,MAAA,EAAE,EAAC,UAHP;AAII,MAAA,IAAI,EAAC,UAJT;AAKI,MAAA,KAAK,EAAC,eALV;AAMI,MAAA,IAAI,EAAC,MANT;AAOI,MAAA,KAAK,MAPT;AAQI,MAAA,QAAQ,MARZ;AASI,MAAA,OAAO,EAAC,OATZ;AAUI,MAAA,QAAQ,MAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BJ,eAwCI;AAAK,MAAA,KAAK,EAAE;AAAEkC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,WAAW,EAAE,EAA7B;AAAiCC,QAAAA,KAAK,EAAE;AAAxC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8D,KAAK3B,KAAL,CAAWL,aAAzE,CAxCJ,eAyCI,oBAAC,QAAD;AACI,MAAA,QAAQ,EAAE,KAAKS,QADnB;AAEI,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWR,SAFtB;AAGI,MAAA,EAAE,EAAC,WAHP;AAII,MAAA,IAAI,EAAC,UAJT;AAKI,MAAA,KAAK,EAAC,uBALV;AAMI,MAAA,IAAI,EAAC,sBANT;AAOI,MAAA,KAAK,MAPT;AAQI,MAAA,QAAQ,MARZ;AASI,MAAA,OAAO,EAAC,OATZ;AAUI,MAAA,QAAQ,MAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzCJ,eAqDI;AAAK,MAAA,KAAK,EAAE;AAAEiC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,WAAW,EAAE,EAA7B;AAAiCC,QAAAA,KAAK,EAAE;AAAxC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8D,KAAK3B,KAAL,CAAWJ,cAAzE,CArDJ,CADJ,eAwDI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,IAAI,EAAC,QAA7B;AAAsC,MAAA,QAAQ,EAAE4B,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAxDJ,CALJ,CADJ,CADJ,CADJ,CADJ,CAFJ,CADJ;AA+EH;;AArKqC;;AAuK1C3B,iBAAiB,CAAC+B,SAAlB,GAA8B;AAC1BzC,EAAAA,YAAY,EAAEF,SAAS,CAAC4C,IAAV,CAAeC,UADH;AAE1Bd,EAAAA,IAAI,EAAE/B,SAAS,CAAC8C,MAAV,CAAiBD,UAFG;AAG1BT,EAAAA,MAAM,EAAEpC,SAAS,CAAC8C,MAAV,CAAiBD;AAHC,CAA9B;;AAMA,MAAME,eAAe,GAAGhC,KAAK,KAAK;AAC9BgB,EAAAA,IAAI,EAAEhB,KAAK,CAACgB,IADkB;AAE9BK,EAAAA,MAAM,EAAErB,KAAK,CAACqB;AAFgB,CAAL,CAA7B;;AAKA,eAAenC,OAAO,CAClB8C,eADkB,EAElB;AAAE7C,EAAAA;AAAF,CAFkB,CAAP,CAGbH,UAAU,CAACa,iBAAD,CAHG,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    MDBEdgeHeader,\r\n    MDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBJumbotron,\r\n    MDBIcon,\r\n    MDBAnimation,\r\n    MDBInput,\r\n    MDBBtn\r\n} from 'mdbreact';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { RegisterUser } from '../actions/authActions';\r\n//import classnames from \"classnames\";\r\nconst initialState = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n    nameError: \"\",\r\n    emailError: \"\",\r\n    passwordError: \"\",\r\n    password2Error: \"\",\r\n}\r\n\r\nclass ResetPasswordPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = initialState;\r\n    }\r\n\r\n    componentDidMount() {\r\n        // If logged in and user navigates to Register page, should redirect them to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/register\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n    validate = () => {\r\n        //debugger;\r\n        let nameError = \"\", emailError = \"\", passwordError = \"\", password2Error = \"\"\r\n        if (!this.state.name) {\r\n            nameError = 'name cannot be blank';\r\n        }\r\n        if (!this.state.email.includes('@') || !this.state.email.includes('.')) {\r\n            emailError = 'please enter a valid email address';\r\n        }\r\n        if (this.state.password.length < 6 || this.state.password === this.state.name || this.state.password === this.state.email) {\r\n            passwordError = 'password must aleast 6 character';\r\n        }\r\n        else if (this.state.password2 !== this.state.password) {\r\n            password2Error = 'Passwords must match';\r\n        }\r\n\r\n\r\n        if (emailError || nameError || passwordError || password2Error) {\r\n            this.setState({ emailError, nameError, passwordError, password2Error });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    onChange = e => {\r\n\r\n        //alert(e.target.id);\r\n        switch (e.target.id) {\r\n            case 'name': this.setState({ nameError: '' });\r\n                break;\r\n            case 'email': this.setState({ emailError: '' });\r\n                break;\r\n            case 'password': this.setState({ passwordError: '' });\r\n                break;\r\n            case 'password2': this.setState({ password2Error: '' });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            const newUser = {\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                password2: this.state.password2\r\n            };\r\n            this.props.RegisterUser(newUser, this.props.history);\r\n            //reset form\r\n            this.setState({ initialState });\r\n        }\r\n    };\r\n    render() {\r\n        const { emailError, passwordError } = this.state;\r\n        let isEnabledCheck = emailError || passwordError;\r\n        let isEnabled= false;\r\n        if (isEnabledCheck.length > 0) {\r\n            isEnabled = true;\r\n        }else{\r\n            isEnabled = false;\r\n        }\r\n        return (\r\n            <>\r\n                <MDBEdgeHeader color='indigo darken-3' className='sectionPage' />\r\n                <MDBAnimation type='zoomIn' duration='500ms'>\r\n                    <MDBContainer>\r\n                        <MDBRow>\r\n                            <MDBCol md='8' className='mt-3 mx-auto'>\r\n                                <MDBJumbotron>\r\n                                    <h1 className='text-center'>\r\n                                        <MDBIcon icon='edit' className='indigo-text mr-2' />\r\n                                         Reset\r\n                                    </h1>\r\n                                    <form noValidate onSubmit={this.onSubmit}>\r\n                                        <div className='grey-text'>\r\n                                            <MDBInput\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.name}\r\n                                                id=\"name\"\r\n                                                type=\"text\"\r\n                                                label='Your name'\r\n                                                icon='user'\r\n                                                group\r\n                                                validate\r\n                                                success='right'\r\n                                                required\r\n\r\n                                            />\r\n                                            <div style={{ fontSize: 13, paddingLeft: 42, color: \"red\" }}>{this.state.nameError}</div>\r\n                                            <MDBInput\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.email}\r\n                                                id=\"email\"\r\n                                                type=\"email\"\r\n                                                label='Your email'\r\n                                                icon='envelope'\r\n                                                group\r\n                                                validate\r\n                                                success='right'\r\n                                                required\r\n                                            />\r\n                                            <div style={{ fontSize: 13, paddingLeft: 42, color: \"red\" }}>{this.state.emailError}</div>\r\n                                            <MDBInput\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.password}\r\n                                                id=\"password\"\r\n                                                type=\"password\"\r\n                                                label='Your password'\r\n                                                icon='lock'\r\n                                                group\r\n                                                validate\r\n                                                success='right'\r\n                                                required\r\n                                            />\r\n                                            <div style={{ fontSize: 13, paddingLeft: 42, color: \"red\" }}>{this.state.passwordError}</div>\r\n                                            <MDBInput\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.password2}\r\n                                                id=\"password2\"\r\n                                                type=\"password\"\r\n                                                label='Confirm your password'\r\n                                                icon='exclamation-triangle'\r\n                                                group\r\n                                                validate\r\n                                                success='right'\r\n                                                required\r\n                                            />\r\n                                            <div style={{ fontSize: 13, paddingLeft: 42, color: \"red\" }}>{this.state.password2Error}</div>\r\n                                        </div>\r\n                                        <div className='text-center'>\r\n                                            <MDBBtn color='primary' type=\"submit\" disabled={isEnabled}>Submit</MDBBtn>\r\n                                        </div>\r\n                                    </form>\r\n                                </MDBJumbotron>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBContainer>\r\n                </MDBAnimation>\r\n            </>\r\n        );\r\n    }\r\n}\r\nResetPasswordPage.propTypes = {\r\n    RegisterUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { RegisterUser }\r\n)(withRouter(ResetPasswordPage));\r\n\r\n"]},"metadata":{},"sourceType":"module"}