{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GARIGIPATHI\\\\Documents\\\\RapidAssessmentPlatform\\\\client\\\\src\\\\pages\\\\SigninPage.jsx\";\nimport React, { Component } from 'react';\nimport { MDBEdgeHeader, MDBContainer, MDBRow, MDBCol, MDBJumbotron, MDBIcon, MDBInput, MDBBtn, MDBAnimation } from 'mdbreact'; //import classnames from \"classnames\";\n\nimport { loginUser } from '../actions/authActions';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  emailError: \"\",\n  passwordError: \"\"\n};\n\nclass SigninPage extends Component {\n  constructor() {\n    super();\n\n    this.validate = () => {\n      //debugger;\n      let emailError = \"\",\n          passwordError = \"\";\n\n      if (!this.state.email.includes('@') || !this.state.email.includes('.')) {\n        emailError = 'please enter a valid email address';\n      }\n\n      if (!this.state.password) {\n        passwordError = 'password cannot be empty';\n      }\n\n      if (emailError || passwordError) {\n        this.setState({\n          emailError,\n          passwordError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.onChange = e => {\n      switch (e.target.id) {\n        case 'email':\n          this.setState({\n            emailError: ''\n          });\n          break;\n\n        case 'password':\n          this.setState({\n            passwordError: ''\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        const userData = {\n          email: this.state.email,\n          password: this.state.password\n        };\n        this.props.loginUser(userData);\n      }\n    };\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/\");\n    } // console.log(this.props.auth.isAuthenticated);\n\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          emailError = _this$state.emailError,\n          passwordError = _this$state.passwordError;\n    let isEnabledCheck = emailError || passwordError;\n    let isEnabled = false;\n\n    if (isEnabledCheck.length > 0) {\n      isEnabled = true;\n    } else {\n      isEnabled = false;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MDBEdgeHeader, {\n      color: \"indigo darken-3\",\n      className: \"sectionPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MDBAnimation, {\n      type: \"zoomIn\",\n      duration: \"500ms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MDBContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MDBRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MDBCol, {\n      md: \"8\",\n      className: \"mt-3 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MDBJumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"edit\",\n      className: \"indigo-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }), \"Sign in\"), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grey-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      onChange: this.onChange,\n      value: this.state.email,\n      id: \"email\",\n      type: \"email\",\n      label: \"Type your email\",\n      icon: \"envelope\",\n      group: true,\n      validate: true,\n      success: \"right\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 13,\n        paddingLeft: 42,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 23\n      }\n    }, this.state.emailError), /*#__PURE__*/React.createElement(MDBInput, {\n      onChange: this.onChange,\n      value: this.state.password,\n      id: \"password\",\n      type: \"password\",\n      label: \"Type your password\",\n      icon: \"lock\",\n      group: true,\n      validate: true,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 13,\n        paddingLeft: 42,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 23\n      }\n    }, this.state.passwordError)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBBtn, {\n      type: \"submit\",\n      disabled: isEnabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 23\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/resetpassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, \"Reset/Forgot Password\")))))))));\n  }\n\n}\n\nSigninPage.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(SigninPage);","map":{"version":3,"sources":["C:/Users/GARIGIPATHI/Documents/RapidAssessmentPlatform/client/src/pages/SigninPage.jsx"],"names":["React","Component","MDBEdgeHeader","MDBContainer","MDBRow","MDBCol","MDBJumbotron","MDBIcon","MDBInput","MDBBtn","MDBAnimation","loginUser","connect","PropTypes","initialState","email","password","emailError","passwordError","SigninPage","constructor","validate","state","includes","setState","onChange","e","target","id","value","onSubmit","preventDefault","isValid","userData","props","componentDidMount","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","errors","render","isEnabledCheck","isEnabled","length","fontSize","paddingLeft","color","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  MDBEdgeHeader,\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBJumbotron,\r\n  MDBIcon,\r\n  MDBInput,\r\n  MDBBtn,\r\n  MDBAnimation\r\n} from 'mdbreact';\r\n//import classnames from \"classnames\";\r\nimport { loginUser } from '../actions/authActions';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  emailError: \"\",\r\n  passwordError: \"\"\r\n}\r\nclass SigninPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n    // console.log(this.props.auth.isAuthenticated);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  validate = () => {\r\n    //debugger;\r\n    let emailError = \"\", passwordError = \"\"\r\n\r\n    if (!this.state.email.includes('@') || !this.state.email.includes('.')) {\r\n      emailError = 'please enter a valid email address';\r\n    }\r\n    if (!this.state.password) {\r\n      passwordError = 'password cannot be empty';\r\n    }\r\n\r\n    if (emailError || passwordError) {\r\n      this.setState({ emailError, passwordError });\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onChange = e => {\r\n    switch (e.target.id) {\r\n      case 'email': this.setState({ emailError: '' });\r\n        break;\r\n      case 'password': this.setState({ passwordError: '' });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const isValid = this.validate();\r\n    if (isValid) {\r\n      const userData = {\r\n        email: this.state.email,\r\n        password: this.state.password\r\n      };\r\n      this.props.loginUser(userData);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { emailError, passwordError } = this.state;\r\n    let isEnabledCheck = emailError || passwordError;\r\n    let isEnabled = false;\r\n    if (isEnabledCheck.length > 0) {\r\n      isEnabled = true;\r\n    } else {\r\n      isEnabled = false;\r\n    }\r\n    return (\r\n      <>\r\n        <MDBEdgeHeader color='indigo darken-3' className='sectionPage' />\r\n        <MDBAnimation type='zoomIn' duration='500ms'>\r\n          <MDBContainer>\r\n            <MDBRow>\r\n              <MDBCol md='8' className='mt-3 mx-auto'>\r\n                <MDBJumbotron>\r\n                  <h1 className='text-center'>\r\n                    <MDBIcon icon='edit' className='indigo-text mr-2' />\r\n                    Sign in\r\n                  </h1>\r\n                  <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className='grey-text'>\r\n                      <MDBInput\r\n                        onChange={this.onChange}\r\n                        value={this.state.email}\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        label='Type your email'\r\n                        icon='envelope'\r\n                        group\r\n                        validate\r\n                        success='right'\r\n                        required\r\n                      />\r\n                      <div style={{ fontSize: 13, paddingLeft: 42, color: \"red\" }}>{this.state.emailError}</div>\r\n                      <MDBInput\r\n                        onChange={this.onChange}\r\n                        value={this.state.password}\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        label='Type your password'\r\n                        icon='lock'\r\n                        group\r\n                        validate\r\n                        required\r\n                      />\r\n                      <div style={{ fontSize: 13, paddingLeft: 42, color: \"red\" }}>{this.state.passwordError}</div>\r\n                    </div>\r\n                    <div className='text-center'>\r\n\r\n                      <MDBBtn type=\"submit\" disabled={isEnabled}>\r\n                        Login\r\n                        </MDBBtn>\r\n                        <a href='/resetpassword'>Reset/Forgot Password</a>\r\n                    </div>\r\n                  </form>\r\n                </MDBJumbotron>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </MDBAnimation>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nSigninPage.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(SigninPage);\r\n"]},"metadata":{},"sourceType":"module"}