{"ast":null,"code":"var _jsxFileName = \"/Users/anu/Documents/RapidAssessmentPlatform/client/src/pages/RegistrationPage.js\";\nimport React, { Component } from 'react';\nimport { MDBEdgeHeader, MDBContainer, MDBRow, MDBCol, MDBJumbotron, MDBIcon, MDBAnimation, MDBInput, MDBBtn } from 'mdbreact';\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { RegisterUser } from '../actions/authActions';\nimport classnames from \"classnames\";\n\nclass RegistrationPage extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const newUser = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        password2: this.state.password2\n      };\n      this.props.RegisterUser(newUser, this.props.history);\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/register\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MDBEdgeHeader, {\n      color: \"indigo darken-3\",\n      className: \"sectionPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(MDBAnimation, {\n      type: \"zoomIn\",\n      duration: \"500ms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MDBContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MDBCol, {\n      md: \"8\",\n      className: \"mt-3 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MDBJumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"edit\",\n      className: \"indigo-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 41\n      }\n    }), \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grey-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      onChange: this.onChange,\n      value: this.state.name,\n      error: errors.name,\n      id: \"name\",\n      type: \"text\",\n      className: classnames(\"\", {\n        invalid: errors.name\n      }),\n      label: \"Your name\",\n      icon: \"user\",\n      group: true,\n      validate: true,\n      success: \"right\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(MDBInput, {\n      onChange: this.onChange,\n      value: this.state.email,\n      error: errors.email,\n      id: \"email\",\n      type: \"email\",\n      className: classnames(\"\", {\n        invalid: errors.email\n      }),\n      label: \"Your email\",\n      icon: \"envelope\",\n      group: true,\n      validate: true,\n      success: \"right\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(MDBInput, {\n      onChange: this.onChange,\n      value: this.state.password,\n      error: errors.password,\n      id: \"password\",\n      type: \"password\",\n      className: classnames(\"\", {\n        invalid: errors.password\n      }),\n      label: \"Your password\",\n      icon: \"lock\",\n      group: true,\n      validate: true,\n      success: \"right\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(MDBInput, {\n      onChange: this.onChange,\n      value: this.state.password2,\n      error: errors.password2,\n      id: \"password2\",\n      type: \"password\",\n      className: classnames(\"\", {\n        invalid: errors.password2\n      }),\n      label: \"Confirm your password\",\n      icon: \"exclamation-triangle\",\n      group: true,\n      validate: true,\n      success: \"right\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(MDBBtn, {\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 45\n      }\n    }, \"Submit\")))))))));\n  }\n\n}\n\nRegistrationPage.propTypes = {\n  RegisterUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  RegisterUser\n})(withRouter(RegistrationPage));","map":{"version":3,"sources":["/Users/anu/Documents/RapidAssessmentPlatform/client/src/pages/RegistrationPage.js"],"names":["React","Component","MDBEdgeHeader","MDBContainer","MDBRow","MDBCol","MDBJumbotron","MDBIcon","MDBAnimation","MDBInput","MDBBtn","withRouter","PropTypes","connect","RegisterUser","classnames","RegistrationPage","constructor","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","name","state","email","password","password2","props","history","errors","componentDidMount","auth","isAuthenticated","push","componentWillReceiveProps","nextProps","render","invalid","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,aADJ,EAEIC,YAFJ,EAGIC,MAHJ,EAIIC,MAJJ,EAKIC,YALJ,EAMIC,OANJ,EAOIC,YAPJ,EAQIC,QARJ,EASIC,MATJ,QAUO,UAVP;AAWA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,gBAAN,SAA+Bf,SAA/B,CAAyC;AACrCgB,EAAAA,WAAW,GAAG;AACV;;AADU,SAwBdC,QAxBc,GAwBHC,CAAC,IAAI;AACZ,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAeH,CAAC,CAACE,MAAF,CAASE;AAA1B,OAAd;AACH,KA1Ba;;AAAA,SA4BdC,QA5Bc,GA4BHL,CAAC,IAAI;AACZA,MAAAA,CAAC,CAACM,cAAF;AAEA,YAAMC,OAAO,GAAG;AACZC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IADL;AAEZE,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAFN;AAGZC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAHT;AAIZC,QAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWG;AAJV,OAAhB;AAOA,WAAKC,KAAL,CAAWlB,YAAX,CAAwBY,OAAxB,EAAiC,KAAKM,KAAL,CAAWC,OAA5C;AACH,KAvCa;;AAEV,SAAKL,KAAL,GAAa;AACTD,MAAAA,IAAI,EAAE,EADG;AAETE,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,SAAS,EAAE,EAJF;AAKTG,MAAAA,MAAM,EAAE;AALC,KAAb;AAOH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB;AACA,QAAI,KAAKH,KAAL,CAAWI,IAAX,CAAgBC,eAApB,EAAqC;AACjC,WAAKL,KAAL,CAAWC,OAAX,CAAmBK,IAAnB,CAAwB,WAAxB;AACH;AACJ;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,QAAIA,SAAS,CAACN,MAAd,EAAsB;AAClB,WAAKd,QAAL,CAAc;AACVc,QAAAA,MAAM,EAAEM,SAAS,CAACN;AADR,OAAd;AAGH;AACJ;;AAiBDO,EAAAA,MAAM,GAAG;AAAA,UACGP,MADH,GACc,KAAKN,KADnB,CACGM,MADH;AAEL,wBACI,uDACI,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAC,iBAArB;AAAuC,MAAA,SAAS,EAAC,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,QAAQ,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAe,MAAA,SAAS,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,MAAd;AAAqB,MAAA,SAAS,EAAC,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,aADJ,eAKI;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,QAAQ,EAAE,KAAKV,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,QAAQ,EAAE,KAAKN,QADnB;AAEI,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWD,IAFtB;AAGI,MAAA,KAAK,EAAEO,MAAM,CAACP,IAHlB;AAII,MAAA,EAAE,EAAC,MAJP;AAKI,MAAA,IAAI,EAAC,MALT;AAMI,MAAA,SAAS,EAAEZ,UAAU,CAAC,EAAD,EAAK;AACtB2B,QAAAA,OAAO,EAAER,MAAM,CAACP;AADM,OAAL,CANzB;AASI,MAAA,KAAK,EAAC,WATV;AAUI,MAAA,IAAI,EAAC,MAVT;AAWI,MAAA,KAAK,MAXT;AAYI,MAAA,QAAQ,MAZZ;AAaI,MAAA,OAAO,EAAC,OAbZ;AAcI,MAAA,QAAQ,MAdZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAiBI,oBAAC,QAAD;AACI,MAAA,QAAQ,EAAE,KAAKT,QADnB;AAEI,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWC,KAFtB;AAGI,MAAA,KAAK,EAAEK,MAAM,CAACL,KAHlB;AAII,MAAA,EAAE,EAAC,OAJP;AAKI,MAAA,IAAI,EAAC,OALT;AAMI,MAAA,SAAS,EAAEd,UAAU,CAAC,EAAD,EAAK;AACtB2B,QAAAA,OAAO,EAAER,MAAM,CAACL;AADM,OAAL,CANzB;AASI,MAAA,KAAK,EAAC,YATV;AAUI,MAAA,IAAI,EAAC,UAVT;AAWI,MAAA,KAAK,MAXT;AAYI,MAAA,QAAQ,MAZZ;AAaI,MAAA,OAAO,EAAC,OAbZ;AAcI,MAAA,QAAQ,MAdZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,eAiCI,oBAAC,QAAD;AACI,MAAA,QAAQ,EAAE,KAAKX,QADnB;AAEI,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWE,QAFtB;AAGI,MAAA,KAAK,EAAEI,MAAM,CAACJ,QAHlB;AAII,MAAA,EAAE,EAAC,UAJP;AAKI,MAAA,IAAI,EAAC,UALT;AAMI,MAAA,SAAS,EAAEf,UAAU,CAAC,EAAD,EAAK;AACtB2B,QAAAA,OAAO,EAAER,MAAM,CAACJ;AADM,OAAL,CANzB;AASI,MAAA,KAAK,EAAC,eATV;AAUI,MAAA,IAAI,EAAC,MAVT;AAWI,MAAA,KAAK,MAXT;AAYI,MAAA,QAAQ,MAZZ;AAaI,MAAA,OAAO,EAAC,OAbZ;AAcI,MAAA,QAAQ,MAdZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCJ,eAiDI,oBAAC,QAAD;AACI,MAAA,QAAQ,EAAE,KAAKZ,QADnB;AAEI,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWG,SAFtB;AAGI,MAAA,KAAK,EAAEG,MAAM,CAACH,SAHlB;AAII,MAAA,EAAE,EAAC,WAJP;AAKI,MAAA,IAAI,EAAC,UALT;AAMI,MAAA,SAAS,EAAEhB,UAAU,CAAC,EAAD,EAAK;AACtB2B,QAAAA,OAAO,EAAER,MAAM,CAACH;AADM,OAAL,CANzB;AASI,MAAA,KAAK,EAAC,uBATV;AAUI,MAAA,IAAI,EAAC,sBAVT;AAWI,MAAA,KAAK,MAXT;AAYI,MAAA,QAAQ,MAZZ;AAaI,MAAA,OAAO,EAAC,OAbZ;AAcI,MAAA,QAAQ,MAdZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjDJ,CADJ,eAmEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,IAAI,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAnEJ,CALJ,CADJ,CADJ,CADJ,CADJ,CAFJ,CADJ;AA0FH;;AArIoC;;AAuIzCf,gBAAgB,CAAC2B,SAAjB,GAA6B;AACzB7B,EAAAA,YAAY,EAAEF,SAAS,CAACgC,IAAV,CAAeC,UADJ;AAEzBT,EAAAA,IAAI,EAAExB,SAAS,CAACkC,MAAV,CAAiBD,UAFE;AAGzBX,EAAAA,MAAM,EAAEtB,SAAS,CAACkC,MAAV,CAAiBD;AAHA,CAA7B;;AAMA,MAAME,eAAe,GAAGnB,KAAK,KAAK;AAC9BQ,EAAAA,IAAI,EAAER,KAAK,CAACQ,IADkB;AAE9BF,EAAAA,MAAM,EAAEN,KAAK,CAACM;AAFgB,CAAL,CAA7B;;AAKA,eAAerB,OAAO,CAClBkC,eADkB,EAElB;AAAEjC,EAAAA;AAAF,CAFkB,CAAP,CAGbH,UAAU,CAACK,gBAAD,CAHG,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {\n    MDBEdgeHeader,\n    MDBContainer,\n    MDBRow,\n    MDBCol,\n    MDBJumbotron,\n    MDBIcon,\n    MDBAnimation,\n    MDBInput,\n    MDBBtn\n} from 'mdbreact';\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { RegisterUser } from '../actions/authActions';\nimport classnames from \"classnames\";\n\nclass RegistrationPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\",\n            errors: {}\n        };\n    }\n    componentDidMount() {\n        // If logged in and user navigates to Register page, should redirect them to dashboard\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/register\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password2: this.state.password2\n        };\n\n        this.props.RegisterUser(newUser, this.props.history);\n    };\n    render() {\n        const { errors } = this.state;\n        return (\n            <>\n                <MDBEdgeHeader color='indigo darken-3' className='sectionPage' />\n                <MDBAnimation type='zoomIn' duration='500ms'>\n                    <MDBContainer>\n                        <MDBRow>\n                            <MDBCol md='8' className='mt-3 mx-auto'>\n                                <MDBJumbotron>\n                                    <h1 className='text-center'>\n                                        <MDBIcon icon='edit' className='indigo-text mr-2' />\n                                         Register\n                                    </h1>\n                                    <form noValidate onSubmit={this.onSubmit}>\n                                        <div className='grey-text'>\n                                            <MDBInput\n                                                onChange={this.onChange}\n                                                value={this.state.name}\n                                                error={errors.name}\n                                                id=\"name\"\n                                                type=\"text\"\n                                                className={classnames(\"\", {\n                                                    invalid: errors.name\n                                                })}\n                                                label='Your name'\n                                                icon='user'\n                                                group\n                                                validate\n                                                success='right'\n                                                required\n                                            />\n                                            <MDBInput\n                                                onChange={this.onChange}\n                                                value={this.state.email}\n                                                error={errors.email}\n                                                id=\"email\"\n                                                type=\"email\"\n                                                className={classnames(\"\", {\n                                                    invalid: errors.email\n                                                })}\n                                                label='Your email'\n                                                icon='envelope'\n                                                group\n                                                validate\n                                                success='right'\n                                                required\n                                            />\n                                            <MDBInput\n                                                onChange={this.onChange}\n                                                value={this.state.password}\n                                                error={errors.password}\n                                                id=\"password\"\n                                                type=\"password\"\n                                                className={classnames(\"\", {\n                                                    invalid: errors.password\n                                                })}\n                                                label='Your password'\n                                                icon='lock'\n                                                group\n                                                validate\n                                                success='right'\n                                                required\n                                            />\n                                            <MDBInput\n                                                onChange={this.onChange}\n                                                value={this.state.password2}\n                                                error={errors.password2}\n                                                id=\"password2\"\n                                                type=\"password\"\n                                                className={classnames(\"\", {\n                                                    invalid: errors.password2\n                                                })}\n                                                label='Confirm your password'\n                                                icon='exclamation-triangle'\n                                                group\n                                                validate\n                                                success='right'\n                                                required\n                                            />\n                                        </div>\n                                        <div className='text-center'>\n                                            <MDBBtn color='primary' type=\"submit\">Submit</MDBBtn>\n                                        </div>\n                                    </form>\n                                </MDBJumbotron>\n                            </MDBCol>\n                        </MDBRow>\n                    </MDBContainer>\n                </MDBAnimation>\n            </>\n        );\n    }\n}\nRegistrationPage.propTypes = {\n    RegisterUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { RegisterUser }\n)(withRouter(RegistrationPage));\n\n"]},"metadata":{},"sourceType":"module"}